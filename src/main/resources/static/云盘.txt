在启动配置的VM options添加-Dspring.config.location=api-server/conf/application.yml,classpath:common.yml


<!-- okhttp3 -->
<dependency>
	<groupId>com.squareup.okhttp3</groupId>
	<artifactId>okhttp</artifactId>
	<version>3.6.0</version>
</dependency>
<!-- json -->
<dependency>
	<groupId>com.alibaba</groupId>
	<artifactId>fastjson</artifactId>
	<version>1.2.49</version>
</dependency>


<!-- 引入log4j2依赖 -->
<dependency>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-log4j2</artifactId>
</dependency>


log4j2

logging:
  config: classpath:log4j2/log4j2-${spring.profiles.active}.xml

<?xml version="1.0" encoding="UTF-8"?>
<configuration monitorInterval="5">
    <!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
    <Properties>
        <property name="LOG_PATTERN" value="%date{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>
        <property name="FILE_PATH" value="logs"/>
        <property name="FILE_NAME" value="grs-operation-service"/>
        <property name="MAX_FILE_SIZE" value="20MB"/>
        <property name="MAX_HISTORY" value="20"/>
    </Properties>

    <appenders>

        <console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
        </console>

        <File name="FileLog" fileName="${FILE_PATH}/tmp.log" append="false">
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
        </File>

        <RollingFile name="RollingFileInfo" fileName="${FILE_PATH}/info.log"
                     filePattern="${FILE_PATH}/${FILE_NAME}-INFO-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1"/>
                <SizeBasedTriggeringPolicy size="${MAX_FILE_SIZE}"/>
            </Policies>
            <DefaultRolloverStrategy max="${MAX_HISTORY}"/>
        </RollingFile>

        <RollingFile name="RollingFileWarn" fileName="${FILE_PATH}/warn.log"
                     filePattern="${FILE_PATH}/${FILE_NAME}-WARN-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1"/>
                <SizeBasedTriggeringPolicy size="${MAX_FILE_SIZE}"/>
            </Policies>
            <DefaultRolloverStrategy max="${MAX_HISTORY}"/>
        </RollingFile>

        <RollingFile name="RollingFileError" fileName="${FILE_PATH}/error.log"
                     filePattern="${FILE_PATH}/${FILE_NAME}-ERROR-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1"/>
                <SizeBasedTriggeringPolicy size="${MAX_FILE_SIZE}"/>
            </Policies>
            <DefaultRolloverStrategy max="${MAX_HISTORY}"/>
        </RollingFile>

    </appenders>

    <loggers>
        <logger name="org.mybatis" level="debug" additivity="false">
            <AppenderRef ref="Console"/>
        </logger>
        <Logger name="org.springframework" level="debug" additivity="false">
            <AppenderRef ref="Console"/>
        </Logger>
        <root level="debug">
            <appender-ref ref="Console"/>
            <appender-ref ref="FileLog"/>
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileWarn"/>
            <appender-ref ref="RollingFileError"/>
        </root>
    </loggers>

</configuration>




@Data
public class JsonVO<T> implements Serializable {

    private static final int SUCCESS_CODE = HttpStatus.OK.value();

    private Integer code;

    private String message;

    private T data;

    /**
     * 返回code和msg，对应关系见{@link OmsError}
     */
    public JsonVO(int code, String message) {
        this.code = code;
        this.message = message;
        this.data = null;
    }

    /**
     * 返回code和msg，对应关系见{@link OmsError}，包括具体的data
     */
    public JsonVO(int code, String message, T data) {
        this.code = code;
        this.message = message;
        this.data = data;
    }

    /**
     * 只返回data，默认code为success
     */
    public JsonVO(T data) {
        this.code = SUCCESS_CODE;
        this.message = null;
        this.data = data;
    }

    /**
     * 返回msg和data，默认code为success
     */
    public JsonVO(String message, T data) {
        this.code = SUCCESS_CODE;
        this.message = message;
        this.data = data;
    }

    /**
     * 很多非get操作，返回一个成功码
     */
    public JsonVO() {
        this.code = SUCCESS_CODE;
        this.message = null;
        this.data = null;
    }

}